pwd
install.packages("knitr")
knitr
insall.package("KernSmooth")
install.package("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
q()
set.seed(20)
x <- rnorm(100)
sigma <- rnorm(100,0,2)
y <- 0.5 + 2 * x + sigma
head(y)
summary(y)
plot(x,y)
x <- rbinom(100,1,0.5)
head(x)
summary(x)
setwd("c:/users/cic/rprog-pa3")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses="character")
head(outcome)
names(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
hospitaldata <- read.csv("outcome-of-care-measures.csv", colClasses="character")
hospitaldata[,c(11, 17, 23)] <- as.numeric(hospitaldata[,c(11, 17, 23)])
hospitaldata[,11] <- as.numeric(hospitaldata[,11])
index <- 11
minvalue <- min(hospitaldata[, index])
minvalue
?min
minvalue <- min(hospitaldata[, index], na.rm=TRUE)
minvalue
hospitaldata$Hospital.Name[hospitaldata[,index] == minvalue]
hospitaldata[,index] == minvalue
hospitaldata[c(1,2),5]
hospitaldata[hospitaldata[,index] == minvalue, 2]
?na.rm
?[]
?[
index <- 11
minvalue <- min(hospitaldata[, index], na.rm=TRUE)
namelist <- hospitaldata$Hospital.Name[hospitaldata[,index] == minvalue]
name <- min(namelist, na.rm=TRUE)
name
"a" in c("a","b", "c")
if (which(c("a","b","c"),"a")) print("in")
if (which(c("a","b","c"),"a") > 0) print("in")
which(c("a","b","c"),"a")
which(c("a","b","c") == "a")
if (which(c("a","b","c") == "a") ) print("in")
if (which(c("a","b","c") == "d") ) print("in") else print("not in")
which(c("a","b","c") == "d")
if (which(c("a","b","c") == "d") ) print("in")
index <- 11
minvalue <- min(hospitaldata[, index], na.rm=TRUE)
namelist <- complete.cases(hospitaldata$Hospital.Name[hospitaldata[,index] == minvalue])
namelist <- sort(namelist)
namelist[1]
namelist
## rate
index <- 11
minvalue <- min(hospitaldata[, index], na.rm=TRUE)
namelist <- hospitaldata$Hospital.Name[hospitaldata[,index] == minvalue]
name <- min(namelist, na.rm=TRUE)
name
index <- 11
state <= "TX"
minvalue <- min(hospitaldata[, index], na.rm=TRUE)
namelist <- hospitaldata$Hospital.Name[hospitaldata[,index] == minvalue & hospitaldata[,7] == state]
name <- min(namelist, na.rm=TRUE)
name
index <- 11
state <- "TX"
minvalue <- min(hospitaldata[, index], na.rm=TRUE)
namelist <- hospitaldata$Hospital.Name[hospitaldata[,index] == minvalue & hospitaldata[,7] == state]
name <- min(namelist, na.rm=TRUE)
name
namelist
?subst
?subset
subset(hospitaldata, hospitaldata[,index] == minvalue & hospitaldata[,7] == state)
subset(hospitaldata, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == minvalue & State == "TX")
subset(hospitaldata, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == minvalue)
subdata <- subset(hospitaldata, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == minvalue)
subset(subdata, state="TX")
subset(subdata, state == "TX")
index <- 11
statename <- "TX"
subdata <- subset(hospitaldata, state == statename)
head(subdata)
index <- 11
state <- "TX"
subdata <- subset(hospitaldata, State == state)
head(subdata)
head(subdata$State)
minvalue <- min(subdata[, index], na.rm=TRUE)
namelist <- subset(subdata, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == minvalue)
name <- min(namelist, na.rm=TRUE)
name
minvalue
namelist
minvalue <- min(subdata[, index], na.rm=TRUE)
namelist <- subset(subdata, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == minvalue, select=Hospital.Name)
name <- min(namelist, na.rm=TRUE)
name
namelist
index <- 11
state <- "TX"
subdata <- subset(hospitaldata, State == state)
minvalue <- min(subdata[, index], na.rm=TRUE)
namelist <- subset(subdata, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == minvalue, select=Hospital.Name)
namelist <- sort(namelist)
namelist[1]
namelist
vec <- namelist
vec
vec <- as.vector(namelist)
vec
vec <- as.character(namelist[1])
vec
index <- 11
state <- "TX"
subdata <- subset(hospitaldata, State == state)
which.min(subdata[,index])
index <- 11
state <- "TX"
subdata <- subset(hospitaldata, State == state)
subdata[which.min(subdata[,index]), 5]
index <- 11
state <- "TX"
subdata <- subset(hospitaldata, State == state)
subdata[which.min(subdata[,index]), 2]
match("a", c("a","b","c"))
match("c", c("a","b","c"))
match("d", c("a","b","c"))
if (is.na(match("TX", hospitaldata[,7]))) print "not in" else print "in"
if (is.na(match("TX", hospitaldata[,7]))) print("not in") else print("in")
if (is.na(match("TM", hospitaldata[,7]))) print("not in") else print("in")
state <- "TX"
outcome <- "heart attack"
hospitaldata <- read.csv("outcome-of-care-measures.csv", colClasses="character")
##hospitaldata[,c(11, 17, 23)] <- as.numeric(hospitaldata[,c(11, 17, 23)])
hospitaldata[,11] <- as.numeric(hospitaldata[,11])
## Check that state and outcome are valid
if (is.na(state, hospitaldata[,7])){
print('Error in best("'+state+'", "'+outcome+'") : invalid state')
return
}
if (outcome == "heart attack"){
index <- 11
}else if (outcome == "heart failure"){
index <- 17
}else if (outcome == "pneumonia"){
index <- 23
}else{
print('Error in best("'+state+'", "'+outcome+'") : invalid outcome')
return
}
## Return hospital name in that state with lowest 30-day death
## rate
#Another way:
#minvalue <- min(subdata[, index], na.rm=TRUE)
#namelist <- subset(subdata, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == minvalue, select=Hospital.Name)
subdata <- subset(hospitaldata, State == state)
namelist <- subdata[which.min(subdata[,index]), 2]
namelist <- sort(namelist)
name <- as.character(namelist[1])
name
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
print("a"+"b")
print("a"&&"b")
print("a"&"b")
source("best.R")
best("BB", "heart attack")
best("BB", "heart attack")
source("submitscript3.R")
submit()
submit()
submit()
?throw
?stop
submit()
source("best.R")
best("BB","heart attack")
?order
?subset
hospitaldata <- read.csv("outcome-of-care-measures.csv")
head(hospitaldata)
subdata <- subset(hospitaldata, State == "TX", select=c(Hospital.Name
, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
head(subdata)
subdata <- subset(hospitaldata, State == state, select=c(2,11))
subdata
head(subdata)
index <- 11
subdata <- subset(hospitaldata, State == state, select=c(2,index))
good <- complete.cases(subdata[,2])
subdata <- subdata[good,]
head(subdata)
hospitaldata[,11] <- as.numeric(hospitaldata[,11])
subdata <- subset(hospitaldata, State == state, select=c(2,index))
good <- complete.cases(subdata[,2])
subdata <- subdata[good,]
head(subdata)
?order
subdata[,order(2,1)]
subdata <- subset(hospitaldata, State == state, select=c(2,index))
good <- complete.cases(subdata[,2])
subdata <- subdata[good,]
subdata
x <- subdata[,1]
y <- subdata[,2]
cbind(x,y)[,order(y,x)]
x <- subdata[,1]
y <- subdata[,2]
rbind(x,y)[,order(y,x)]
head(subdata)
head(subdata[,1])
x <- subdata[,1]
y <- subdata[,2]
rbind(x,y)
x
y
order(y,x)
subdata[,order(y,x)]
subdata[order(y,x),]
head(subdata[,order(y,x)])
head(subdata[order(y,x),])
dim(subdata)
dim(subdata)[1]
state <- "TX"
outcome <- "heart attack"
num <- "best"
## Read outcome data
hospitaldata <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if (is.na(match(state, hospitaldata[,7]))){
stop("invalid state")
}
if (outcome == "heart attack"){
index <- 11
hospitaldata[,11] <- as.numeric(hospitaldata[,11])
}else if (outcome == "heart failure"){
index <- 17
hospitaldata[,17] <- as.numeric(hospitaldata[,17])
}else if (outcome == "pneumonia"){
index <- 23
hospitaldata[,23] <- as.numeric(hospitaldata[,23])
}else{
stop("invalid outcome")
}
## Return hospital name in that state with the given rank
## 30-day death rate
## get subset we concerned
subdata <- subset(hospitaldata, State == state, select=c(2,index))
## remove na
good <- complete.cases(subdata[,2])
subdata <- subdata[good,]
## sort dat
x <- subdata[,1]
y <- subdata[,2]
orderdata <- subdata[order(y,x),]
## get name
if (num == "best"){
name <- orderdata[1,1]
}else if(num == "worset"){
name <- orderdata[-1,1]
}else if (num < dim(orderdata)[1] and num > 0){
name <- orderdata[1:num,1]
}else
name <- NA
name
## Read outcome data
hospitaldata <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if (is.na(match(state, hospitaldata[,7]))){
stop("invalid state")
}
if (outcome == "heart attack"){
index <- 11
hospitaldata[,11] <- as.numeric(hospitaldata[,11])
}else if (outcome == "heart failure"){
index <- 17
hospitaldata[,17] <- as.numeric(hospitaldata[,17])
}else if (outcome == "pneumonia"){
index <- 23
hospitaldata[,23] <- as.numeric(hospitaldata[,23])
}else{
stop("invalid outcome")
}
## Return hospital name in that state with the given rank
## 30-day death rate
## get subset we concerned
subdata <- subset(hospitaldata, State == state, select=c(2,index))
## remove na
good <- complete.cases(subdata[,2])
subdata <- subdata[good,]
## sort dat
x <- subdata[,1]
y <- subdata[,2]
orderdata <- subdata[order(y,x),]
## get name
if (num == "best"){
name <- orderdata[1,1]
}else if(num == "worst"){
name <- orderdata[-1,1]
}else if (num < dim(orderdata)[1] & num > 0){
name <- orderdata[1:num, 1]
}else{
name <- NA
}
name
num <- "worst"
## Read outcome data
hospitaldata <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if (is.na(match(state, hospitaldata[,7]))){
stop("invalid state")
}
if (outcome == "heart attack"){
index <- 11
hospitaldata[,11] <- as.numeric(hospitaldata[,11])
}else if (outcome == "heart failure"){
index <- 17
hospitaldata[,17] <- as.numeric(hospitaldata[,17])
}else if (outcome == "pneumonia"){
index <- 23
hospitaldata[,23] <- as.numeric(hospitaldata[,23])
}else{
stop("invalid outcome")
}
## Return hospital name in that state with the given rank
## 30-day death rate
## get subset we concerned
subdata <- subset(hospitaldata, State == state, select=c(2,index))
## remove na
good <- complete.cases(subdata[,2])
subdata <- subdata[good,]
## sort dat
x <- subdata[,1]
y <- subdata[,2]
orderdata <- subdata[order(y,x),]
## get name
if (num == "best"){
name <- orderdata[1,1]
}else if(num == "worst"){
name <- orderdata[-1,1]
}else if (num < dim(orderdata)[1] & num > 0){
name <- orderdata[1:num, 1]
}else{
name <- NA
}
name
num <- 5
## Read outcome data
hospitaldata <- read.csv("outcome-of-care-measures.csv")
## Check that state and outcome are valid
if (is.na(match(state, hospitaldata[,7]))){
stop("invalid state")
}
if (outcome == "heart attack"){
index <- 11
hospitaldata[,11] <- as.numeric(hospitaldata[,11])
}else if (outcome == "heart failure"){
index <- 17
hospitaldata[,17] <- as.numeric(hospitaldata[,17])
}else if (outcome == "pneumonia"){
index <- 23
hospitaldata[,23] <- as.numeric(hospitaldata[,23])
}else{
stop("invalid outcome")
}
## Return hospital name in that state with the given rank
## 30-day death rate
## get subset we concerned
subdata <- subset(hospitaldata, State == state, select=c(2,index))
## remove na
good <- complete.cases(subdata[,2])
subdata <- subdata[good,]
## sort dat
x <- subdata[,1]
y <- subdata[,2]
orderdata <- subdata[order(y,x),]
## get name
if (num == "best"){
name <- orderdata[1,1]
}else if(num == "worst"){
name <- orderdata[dim(orderdata)[1],1]
}else if (num < dim(orderdata)[1] & num > 0){
name <- orderdata[1:num, 1]
}else{
name <- NA
}
name
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
rankhospital("MN","heart attack",5000)
state <- "TX"
outcome <- "heart attack"
num <- 5
hospitaldata <- read.csv("outcome-of-care-measures.csv")
index <- 11
hospitaldata[,11] <- as.numeric(hospitaldata[,11])
subdata <- subset(hospitaldata, State == state, select=c(2,index))
head(subdata)
subset(hospitaldata, State == state, select=c(2,index))
hospitaldata <- read.csv("outcome-of-care-measures.csv")
subset(hospitaldata, State == state, select=c(2,index))
subset(subdata, is.numeric(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack) == TRUE, select=c(1,2))
subdata <- subdata[good,]
## sort dat
x <- subdata[,1]
y <- subdata[,2]
orderdata <- subdata[order(y,x),]
## get name
if (num == "best"){
name <- orderdata[1,1]
}else if(num == "worst"){
name <- orderdata[dim(orderdata)[1],1]
}else if (num < dim(orderdata)[1] & num > 0){
name <- orderdata[1:num, 1]
}else{
name <- NA
}
name
}
subset(subdata, is.numeric(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack) == TRUE, select=c(1,2))
hospitaldata <- read.csv("outcome-of-care-measures.csv", colClasses="character")
index <- 11
hospitaldata[,11] <- as.numeric(hospitaldata[,11])
head(hospitaldata[,11] )
subdata <- subset(hospitaldata, State == state, select=c(2,index))
head(subdata)
good <- complete.cases(subdata[,2])
subdata <- subdata[good,]
head(subdata)
x <- subdata[,1]
y <- subdata[,2]
orderdata <- subdata[order(y,x),]
head(orderdata)
if (num == "best"){
name <- orderdata[1,1]
}else if(num == "worst"){
name <- orderdata[dim(orderdata)[1],1]
}else if (num < dim(orderdata)[1] & num > 0){
name <- orderdata[1:num, 1]
}else{
name <- NA
}
name
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("TX", "heart failure", 4)
state <- "TX"
outcome <- "heart failure"
num <- 4
hospitaldata <- read.csv("outcome-of-care-measures.csv", colClasses="character")
subdata <- subset(hospitaldata, State == state, select=c(2,index))
head(subdata)
subdata <- subset(hospitaldata, State == state, select=c(2,index))
head(subdata)
index
index <- 17
subdata <- subset(hospitaldata, State == state, select=c(2,index))
head(subdata)
x <- subdata[,1]
y <- subdata[,2]
orderdata <- subdata[order(y,x),]
head(orderdata)
x <- subdata[,1]
y <- as.numeric(subdata[,2])
orderdata <- subdata[order(y,x),]
head(subdata)
